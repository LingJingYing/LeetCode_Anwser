class Solution {
public:
    bool isHappy(int n) {
        set<int> s;
        while(n){
            int t = 0;
            while(n){
                t += (n%10) * (n%10);
                n = n/10;
            }
            n = t;
            if(s.count(t)) break; // 如果不是快乐树，则之前出现过的结果会再次出现
            else s.insert(n);
        }
        return n == 1;
    }
};

// 非快乐数有个特点，循环的数字中必定会有4
class Solution {
public:
    bool isHappy(int n) {
        while (n != 1 && n != 4) {
            int t = 0;
            while (n) {
                t += (n % 10) * (n % 10);
                n /= 10;
            }
            n = t;
        }
        return n == 1;
    }
};
