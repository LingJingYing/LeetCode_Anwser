// 不排序
class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int>map;
        vector<int>result;
        for(int i=0;i<nums1.size();i++)
        {
            map[nums1[i]]++;
        }
        for(int i=0;i<nums2.size();i++ )
        {
            if(map[nums2[i]]>0)
                result.push_back(nums2[i]);
                map[nums2[i]]--;
        }
        return result;
    }
};
//排序
class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(),nums1.end());
        sort(nums2.begin(),nums2.end());
        vector<int> res;
        
        int l1 = 0;
        int l2 = 0;
        
        while(l1 < nums1.size()&&l2 < nums2.size()){
            if(nums1[l1] == nums2[l2]){
                res.push_back(nums1[l1]);
                ++l1;
                ++l2;
            }else if(nums1[l1] > nums2[l2]){
                ++l2;
            }else{
                ++l1;
            }
        }
        
        return res;
    }
};
