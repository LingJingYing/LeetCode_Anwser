/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        //想象成环形跑道，跑得快的一定会追上跑的慢点
        ListNode* slow=head,*fast=head;
        while(fast&&fast->next){//保证fast可以连续前进两次，不出现 NULL->next 现象
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)return true;
        }
        return false;

    }
};
