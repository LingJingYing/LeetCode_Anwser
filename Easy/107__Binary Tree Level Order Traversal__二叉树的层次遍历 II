/**
* Definition for a binary tree node.
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
	vector<vector<int>> levelOrderBottom(TreeNode* root) {
		vector<vector<int>> v;
		if (nullptr == root) {
			return v;
		}

		queue<pair<int, TreeNode*>> q;
		q.push({ 0, root });

		while (!q.empty()) {
			const auto item = q.front();
			q.pop();

			const int level = item.first;
			if (level == v.size()) {
				v.push_back(vector<int>());
			}

			const auto* node = item.second;
			v[level].push_back(node->val);

			if (nullptr != node->left) {
				q.push({ level + 1, node->left });
			}
			if (nullptr != node->right) {
				q.push({ level + 1, node->right });
			}
		}

		vector<vector<int>> v2;
		for (int i = v.size() - 1; i >= 0; i--) {
			v2.push_back(v.at(i));
		}
		return v2;
	}
};
