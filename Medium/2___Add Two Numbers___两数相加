/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0; // 进位
        ListNode* head = new ListNode(0); //头指针
        ListNode* cur = head; // 移动指针，加变量
        
        // 将 l1 和 l2 等长的相加
        while(l1&&l2)
        {
            int tmp = l1->val + l2->val + carry;
            cur->next = new ListNode(tmp % 10);
            cur = cur->next;
            carry = tmp / 10;
            l1 = l1->next;
            l2 = l2->next;
        }
        
        // 是否 l1 和 l2 不等长
        if(l1)
        {
            while(l1)
            {
                int tmp = l1->val + carry;
                cur->next = new ListNode(tmp % 10);
                cur = cur->next;
                carry = tmp / 10;
                l1 = l1->next;
            }
        }
        else if(l2)
        {
            while(l2)
            {
                int tmp = l2->val + carry;
                cur->next = new ListNode(tmp % 10);
                cur = cur->next;
                carry = tmp / 10;
                l2 = l2->next;
            }
        }
        
        // 进位不为零，则向前增加位数
        while(carry)
        {
            cur->next = new ListNode(carry % 10);
            cur = cur->next;
            carry /= 10;
        }
        
        return head->next;
    }
};
